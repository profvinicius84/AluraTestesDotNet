@using System.ComponentModel.DataAnnotations
@page "/CadastrarArtista"
@inject ArtistasAPI artistasAPI
@inject NavigationManager navigationManager

<h2>Cadastro de Artista</h2>

<EditForm Model="@artista" OnValidSubmit="Cadastrar">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label>Nome</label>
        <InputText @bind-Value="artista.Nome" class="input"/>
    </div>

    <div class="form-group">
        <label>Biografia</label>
        <InputTextArea @bind-Value="artista.Biografia" class="input" Rows="4" />
    </div>

    <div class="form-group">
        <label>Foto de Perfil</label>
        @if (!string.IsNullOrEmpty(fileImage))
        {
            <img src="@fileImage" class="img-preview"/>
        }

        <InputFile OnChange="UploadFile" accept="image/jpeg"/>

    </div>


    <br/>

    <button type="submit" class="btn">Cadastrar</button>
</EditForm>

@code {
    private ArtistaFormModel artista = new();
    private string? fileImage;

    private async Task Cadastrar()
    {
        var request = new ArtistaRequest(
            artista.Nome!,
            artista.Biografia!,
            artista.FotoPerfil);

        await artistasAPI.AddArtistaAsync(request);
        navigationManager.NavigateTo("/Artistas");
    }

    private async Task UploadFile(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var format = "image/jpeg";
        var resizedImage = await file.RequestImageFileAsync(format, 200, 200);

        using var stream = resizedImage.OpenReadStream();
        using var memory = new MemoryStream();
        await stream.CopyToAsync(memory);

        var imageUpload = Convert.ToBase64String(memory.ToArray());
        fileImage = $"data:{format};base64,{imageUpload}";
        artista.FotoPerfil = imageUpload;
    }

    public class ArtistaFormModel
    {
        [Required(ErrorMessage = "O nome é obrigatório")]
        public string? Nome { get; set; }
        [Required(ErrorMessage = "A biografia é obrigatória")]
        public string? Biografia { get; set; }  
        public string? FotoPerfil { get; set; }
    }
}
